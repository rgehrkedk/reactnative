{"version":3,"file":"press.js","names":["_act","_interopRequireDefault","require","_componentTree","_hostComponentNames","_pointerEvents","_textInput","_eventBuilder","_utils","e","__esModule","default","DEFAULT_MIN_PRESS_DURATION","exports","DEFAULT_LONG_PRESS_DELAY_MS","press","element","basePress","config","type","longPress","options","duration","isPressableText","emitTextPressEvents","isEditableTextInput","isPointerEventEnabled","emitTextInputPressEvents","isEnabledTouchResponder","emitPressablePressEvents","hostParentElement","getHostParent","wait","dispatchEvent","EventBuilder","Common","responderGrant","responderRelease","act","props","onStartShouldSetResponder","hasPressEventHandler","Boolean","onPress","onLongPress","onPressIn","onPressOut","isHostText","disabled","touch"],"sources":["../../../src/user-event/press/press.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport act from '../../act';\nimport { getHostParent } from '../../helpers/component-tree';\nimport { isHostText } from '../../helpers/host-component-names';\nimport { isPointerEventEnabled } from '../../helpers/pointer-events';\nimport { isEditableTextInput } from '../../helpers/text-input';\nimport { EventBuilder } from '../event-builder';\nimport type { UserEventConfig, UserEventInstance } from '../setup';\nimport { dispatchEvent, wait } from '../utils';\n\n// These are constants defined in the React Native repo\n// See: https://github.com/facebook/react-native/blob/50e38cc9f1e6713228a91ad50f426c4f65e65e1a/packages/react-native/Libraries/Pressability/Pressability.js#L264\nexport const DEFAULT_MIN_PRESS_DURATION = 130;\nexport const DEFAULT_LONG_PRESS_DELAY_MS = 500;\n\nexport interface PressOptions {\n  duration?: number;\n}\n\nexport async function press(this: UserEventInstance, element: ReactTestInstance): Promise<void> {\n  await basePress(this.config, element, {\n    type: 'press',\n  });\n}\n\nexport async function longPress(\n  this: UserEventInstance,\n  element: ReactTestInstance,\n  options?: PressOptions,\n): Promise<void> {\n  await basePress(this.config, element, {\n    type: 'longPress',\n    duration: options?.duration ?? DEFAULT_LONG_PRESS_DELAY_MS,\n  });\n}\n\ninterface BasePressOptions {\n  type: 'press' | 'longPress';\n  duration?: number;\n}\n\nconst basePress = async (\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n): Promise<void> => {\n  if (isPressableText(element)) {\n    await emitTextPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEditableTextInput(element) && isPointerEventEnabled(element)) {\n    await emitTextInputPressEvents(config, element, options);\n    return;\n  }\n\n  if (isEnabledTouchResponder(element)) {\n    await emitPressablePressEvents(config, element, options);\n    return;\n  }\n\n  const hostParentElement = getHostParent(element);\n  if (!hostParentElement) {\n    return;\n  }\n\n  await basePress(config, hostParentElement, options);\n};\n\nconst emitPressablePressEvents = async (\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) => {\n  await wait(config);\n\n  dispatchEvent(element, 'responderGrant', EventBuilder.Common.responderGrant());\n\n  const duration = options.duration ?? DEFAULT_MIN_PRESS_DURATION;\n  await wait(config, duration);\n\n  dispatchEvent(element, 'responderRelease', EventBuilder.Common.responderRelease());\n\n  // React Native will wait for minimal delay of DEFAULT_MIN_PRESS_DURATION\n  // before emitting the `pressOut` event. We need to wait here, so that\n  // `press()` function does not return before that.\n  if (DEFAULT_MIN_PRESS_DURATION - duration > 0) {\n    await act(async () => {\n      await wait(config, DEFAULT_MIN_PRESS_DURATION - duration);\n    });\n  }\n};\n\nconst isEnabledTouchResponder = (element: ReactTestInstance) => {\n  return isPointerEventEnabled(element) && element.props.onStartShouldSetResponder?.();\n};\n\nconst isPressableText = (element: ReactTestInstance) => {\n  const hasPressEventHandler = Boolean(\n    element.props.onPress ||\n      element.props.onLongPress ||\n      element.props.onPressIn ||\n      element.props.onPressOut,\n  );\n\n  return (\n    isHostText(element) &&\n    isPointerEventEnabled(element) &&\n    !element.props.disabled &&\n    hasPressEventHandler\n  );\n};\n\n/**\n * Dispatches a press event sequence for Text.\n */\nasync function emitTextPressEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  await wait(config, options.duration);\n\n  // Long press events are emitted before `pressOut`.\n  if (options.type === 'longPress') {\n    dispatchEvent(element, 'longPress', EventBuilder.Common.touch());\n  }\n\n  dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n\n  // Regular press events are emitted after `pressOut` according to the React Native docs.\n  // See: https://reactnative.dev/docs/pressable#onpress\n  // Experimentally for very short presses (< 130ms) `press` events are actually emitted before `onPressOut`, but\n  // we will ignore that as in reality most pressed would be above the 130ms threshold.\n  if (options.type === 'press') {\n    dispatchEvent(element, 'press', EventBuilder.Common.touch());\n  }\n}\n\n/**\n * Dispatches a press event sequence for TextInput.\n */\nasync function emitTextInputPressEvents(\n  config: UserEventConfig,\n  element: ReactTestInstance,\n  options: BasePressOptions,\n) {\n  await wait(config);\n  dispatchEvent(element, 'pressIn', EventBuilder.Common.touch());\n\n  // Note: TextInput does not have `onPress`/`onLongPress` props.\n\n  await wait(config, options.duration);\n  dispatchEvent(element, 'pressOut', EventBuilder.Common.touch());\n}\n"],"mappings":"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","ignoreList":[]}